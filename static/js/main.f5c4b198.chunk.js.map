{"version":3,"sources":["context/Page/PageContext.js","context/Favorite/FavoriteContext.js","components/Page.jsx","components/Navbar.jsx","components/Favorite.jsx","context/types.jsx","context/Page/PageReducer.js","api/api.js","context/Page/PageState.js","context/Favorite/FavoriteReducer.js","context/Favorite/FavoriteState.js","App.js","reportWebVitals.js","index.js"],"names":["PageContext","createContext","FavoriteContext","useContext","state","getCats","setFetching","setFavoriteCat","useState","currentPage","setCurrentPage","useEffect","fetching","prevState","document","addEventListener","scrollHandler","removeEventListener","e","target","documentElement","scrollHeight","scrollTop","window","innerHeight","className","cats","map","item","src","url","alt","onClick","id","title","Navbar","exact","to","getFavoriteCats","deleteCat","favoriteCats","length","totalCount","image","GET_CATS","FETCHING","GET_FAVORITE_CATS","SET_TOTAL_COUNT","DELETE_CAT","SET_FAVORITE_CAT","PageReducer","action","type","instance","axios","baseURL","headers","catsAPI","get","post","delete","PageState","props","useReducer","dispatch","updateFetching","Provider","value","then","response","data","finally","children","FavoriteReducer","count","cat","filter","FavoriteState","page","setTimeout","catch","err","console","log","deleteCatState","App","path","component","Page","Favorite","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f5c4b198.chunk.js","sourcesContent":["import {createContext} from 'react';\n\nexport const PageContext = createContext()","import {createContext} from 'react';\n\nexport const FavoriteContext = createContext()","import {useContext, useEffect, useState} from \"react\";\nimport {PageContext} from \"../context/Page/PageContext\";\nimport {FavoriteContext} from \"../context/Favorite/FavoriteContext\";\n\nexport default () => {\n\n    const {state, getCats, setFetching} = useContext(PageContext);\n    const {setFavoriteCat} = useContext(FavoriteContext);\n    const [currentPage, setCurrentPage] = useState(1)\n\n    useEffect(() => {\n        if (state.fetching) {\n            getCats(currentPage)\n            setCurrentPage(prevState => prevState + 1)\n        }\n    }, [state.fetching])\n\n    useEffect(() => {\n        document.addEventListener('scroll', scrollHandler)\n        return function () {\n            document.removeEventListener('scroll', scrollHandler)\n        }\n    }, [state.fetching])\n\n\n    const scrollHandler = e => {\n        if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\n            setFetching(true)\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"gallery\">\n                {state.cats.map(item =>\n                    <div className=\"gallery__item\" key={item.id}>\n                        <div className=\"hover-block\"></div>\n                        <img className=\"gallery__img\"  src={item.url} alt=\"\"/>\n                        <button className=\"gallery__btn\" onClick={()=>setFavoriteCat(item.id)} title=\"Добавить котика\">\n\n                        </button>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\n\nconst Navbar = () => {\n\n\n    return (\n        <>\n            <nav className=\"navbar\">\n                <div className=\"container\">\n                    <ul className=\"navbar__items\">\n                        <li className=\"navbar__item\">\n                            <NavLink className=\"navbar__link\" exact to='/'>Все котики</NavLink>\n                        </li>\n                        <li className=\"navbar__item\">\n                            <NavLink className=\"navbar__link \" to='/favorite'>Любимые котики</NavLink>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </>\n\n    )\n}\nexport default Navbar;","import {useContext, useEffect, useState} from \"react\";\nimport {FavoriteContext} from \"../context/Favorite/FavoriteContext\";\n\nexport default () => {\n\n    const {state, getFavoriteCats, setFetching, deleteCat} = useContext(FavoriteContext);\n    const [currentPage, setCurrentPage] = useState(0)\n\n    useEffect(() => {\n        if (state.fetching) {\n            getFavoriteCats(currentPage)\n            setCurrentPage(prevState => prevState + 1)\n        }\n    }, [state.fetching])\n\n    useEffect(() => {\n        document.addEventListener('scroll', scrollHandler)\n        return function () {\n            document.removeEventListener('scroll', scrollHandler)\n        }\n    }, [state.fetching])\n\n\n    const scrollHandler = e => {\n        if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight)\n            < 100 && state.favoriteCats.length < state.totalCount) {\n            setFetching(true)\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"gallery\">\n                {state.favoriteCats.map(item =>\n                    <div className=\"gallery__item\" key={item.id}>\n                        <div className='hover-block'></div>\n                        <img className=\"gallery__img\"  src={item.image.url} alt=\"\"/>\n                        <button onClick={()=>deleteCat(item.id)} className=\"gallery__btn active\" title=\"Убрать котика\"></button>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};","export const SHOW_LOADER = 'SHOW_LOADER'\nexport const GET_CATS = 'GET_CATS'\nexport const SET_CATS = 'SET_CATS'\nexport const FETCHING = 'FETCHING'\nexport const GET_FAVORITE_CATS = 'GET_FAVORITE_CATS'\nexport const SET_TOTAL_COUNT = 'SET_TOTAL_COUNT'\nexport const DELETE_CAT = 'DELETE_CAT'\nexport const SET_TOTAL_CATS = 'SET_TOTAL_CATS'\nexport const SET_FAVORITE_CAT = 'SET_FAVORITE_CAT'\n","import {FETCHING, GET_CATS} from \"../types\";\n\nexport const PageReducer = (state, action) => {\n    switch (action.type) {\n        case GET_CATS:\n            return {...state,cats: [...state.cats, ...action.cats]};\n        case FETCHING:\n            return {...state, fetching: action.fetching};\n        default:\n            return state;\n    }\n}","import * as axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.thecatapi.com/v1/',\n    headers: {\n        'x-api-key': '03488ee6-4bf2-4798-9586-f45dfffe60ba',\n    },\n});\n\nexport const catsAPI = {\n        getCats(currentPage) {\n            return instance\n                .get(`images/search?limit=15&page=${currentPage}`)\n        },\n        getFavoriteCats(currentPage) {\n            return instance\n                .get(`favourites/?limit=15&page=${currentPage}`)\n        },\n        getFavoriteCatsForSet()  {\n             return instance\n                   .get(`favourites/`)\n             },\n        setFavoriteCat(id) {\n            return instance\n                .post(`favourites` , {\"image_id\": id})\n        },\n        deleteCat(id) {\n            return instance\n                .delete(`favourites/${id}`)\n        },\n};\n\n\n","import React, {useReducer} from 'react';\nimport {PageReducer} from \"./PageReducer\";\nimport {FETCHING, GET_CATS} from \"../types\";\nimport {catsAPI} from \"../../api/api\";\nimport {PageContext} from \"./PageContext\";\n\nexport const PageState = (props) => {\n    let initialState = {\n        cats: [],\n        fetching: true\n    };\n    const [state, dispatch] = useReducer(PageReducer, initialState)\n\n\n    const getCatsState = (cats) => ({\n        type: GET_CATS,\n        cats\n    })\n    const updateFetching = (fetching) => ({\n        type: FETCHING,\n        fetching\n    })\n\n    const setFetching = (fetching) => {\n        dispatch(updateFetching(fetching))\n    }\n\n    const getCats = () => {\n\n        catsAPI.getCats().then(response => {\n            dispatch(getCatsState(response.data));\n\n        }).finally(()=> {\n            dispatch(updateFetching(false))\n        });\n\n    }\n    return (\n        <PageContext.Provider value={{\n            state, getCats, setFetching\n        }}>\n            {props.children}\n        </PageContext.Provider>\n    )\n}","import {DELETE_CAT, FETCHING, GET_FAVORITE_CATS, SET_FAVORITE_CAT, SET_TOTAL_COUNT} from \"../types\";\n\nexport const FavoriteReducer = (state, action) => {\n    switch (action.type) {\n        case GET_FAVORITE_CATS:\n            return {...state, favoriteCats: [...state.favoriteCats, ...action.cats]};\n        case FETCHING:\n            return {...state, fetching: action.fetching};\n        case SET_TOTAL_COUNT:\n            return {...state, totalCount: action.count};\n        case SET_FAVORITE_CAT:\n            return {...state, favoriteCats: [...state.favoriteCats, action.cat]};\n        case DELETE_CAT:\n            return {...state, favoriteCats: state.favoriteCats.filter(item => item.id !== action.id)};\n        default:\n            return state;\n    }\n}","import React, {useReducer} from 'react';\nimport {FavoriteReducer} from \"./FavoriteReducer\";\nimport {DELETE_CAT, FETCHING, GET_FAVORITE_CATS, SET_FAVORITE_CAT, SET_TOTAL_COUNT} from \"../types\";\nimport {catsAPI} from \"../../api/api\";\nimport {FavoriteContext} from \"./FavoriteContext\";\n\nexport const FavoriteState = (props) => {\n    let initialState = {\n        favoriteCats: [],\n        fetching: true,\n        totalCount: 0,\n    };\n    const [state, dispatch] = useReducer(FavoriteReducer, initialState)\n\n\n    const getCats = (cats) => ({\n        type: GET_FAVORITE_CATS,\n        cats\n    })\n    const updateFetching = (fetching) => ({\n        type: FETCHING,\n        fetching\n    })\n    const setTotalCount = (count) => ({\n        type: SET_TOTAL_COUNT,\n        count\n    })\n    const deleteCatState = (id) => ({\n        type: DELETE_CAT,\n        id\n    })\n\n    const setCat = (cat) => ({\n        type: SET_FAVORITE_CAT,\n        cat\n    })\n\n    const setFetching = (fetching) => {\n        dispatch(updateFetching(fetching))\n    }\n\n    const getFavoriteCats= (page) => {\n        catsAPI.getFavoriteCats(page).then(response => {\n            dispatch(getCats(response.data));\n            dispatch(setTotalCount(response.headers['pagination-count']))\n        }).finally(()=> {\n            dispatch(updateFetching(false))\n        });\n    }\n\n    const setFavoriteCat = (id) => {\n        catsAPI.setFavoriteCat(id)\n        setTimeout(()=> {\n            catsAPI.getFavoriteCatsForSet().then(response => {\n                dispatch(setCat(response.data[response.data.length - 1]))\n            }).catch((err)=>{\n                console.log(err)})\n        }, 500)\n\n    }\n\n    const deleteCat = (id) => {\n        catsAPI.deleteCat(id)\n        dispatch(deleteCatState(id))\n    }\n\n    return (\n        <FavoriteContext.Provider value={{\n            state, getFavoriteCats, setFetching, setFavoriteCat, deleteCat\n        }}>\n            {props.children}\n        </FavoriteContext.Provider>\n    )\n}","import './App.css';\nimport Page from \"./components/Page\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Favorite from \"./components/Favorite\";\nimport {PageState} from \"./context/Page/PageState\";\nimport {FavoriteState} from \"./context/Favorite/FavoriteState\";\n\nfunction App() {\n    return (\n        <div className=\"wrapper\">\n            <FavoriteState>\n                <PageState>\n                        <Navbar/>\n                        <div>\n                            <Switch>\n                                <Route path={'/'} exact component={Page}/>\n                                <Route path={'/favorite'} exact component={Favorite}/>\n                            </Switch>\n                        </div>\n                </PageState>\n            </FavoriteState>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n    <App />\n  </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}